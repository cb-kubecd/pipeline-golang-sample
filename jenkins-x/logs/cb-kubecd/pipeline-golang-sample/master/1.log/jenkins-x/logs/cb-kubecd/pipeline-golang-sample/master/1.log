Step: build-step-credential-initializer:

{"level":"warn","ts":1548182128.4219255,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1548182128.4224403,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1548182131.0175908,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1548182132.1152182,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/cb-kubecd/pipeline-golang-sample.git\" @ \"master\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
  18.130 [id=33]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins2805227369609485044test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
Stage "CI Build and push snapshot" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/cb-kubecd/pipeline-golang-sample
[Pipeline] {
[Pipeline] git
Cloning the remote Git repository
Cloning repository https://github.com/cb-kubecd/pipeline-golang-sample.git
 > git init /home/jenkins/go/src/github.com/cb-kubecd/pipeline-golang-sample # timeout=10
Fetching upstream changes from https://github.com/cb-kubecd/pipeline-golang-sample.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/cb-kubecd/pipeline-golang-sample.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/cb-kubecd/pipeline-golang-sample.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/cb-kubecd/pipeline-golang-sample.git # timeout=10
Fetching upstream changes from https://github.com/cb-kubecd/pipeline-golang-sample.git
 > git fetch --tags --progress https://github.com/cb-kubecd/pipeline-golang-sample.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision c8cebec293695bddd3d46cb57208bb3e3ad428ce (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f c8cebec293695bddd3d46cb57208bb3e3ad428ce
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b master c8cebec293695bddd3d46cb57208bb3e3ad428ce
Commit message: "Draft create"
First time build. Skipping changelog.
[Pipeline] sh
+ jx-release-version
+ echo 0.0.1
[Pipeline] sh
+ cat VERSION
+ jx step tag --version 0.0.1
Tag v0.0.1 created and pushed to remote origin
[Pipeline] sh
+ make build
CGO_ENABLED=0 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/pipeline-golang-sample main.go
[Pipeline] sh
+ cat VERSION
+ export VERSION=0.0.1
+ skaffold build -f skaffold.yaml
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.8kBSending build context to Docker daemon  6.506MB
Step 1/4 : FROM scratch
 ---> 
Step 2/4 : EXPOSE 8080
 ---> Running in 817cc6e3625f
 ---> 1002c1233c4d
Step 3/4 : ENTRYPOINT /pipeline-golang-sample
 ---> Running in a08f0f48d193
 ---> ecdf1aa9391f
Step 4/4 : COPY ./bin/ /
 ---> 69aae2d488cd
Successfully built 69aae2d488cd
The push refers to a repository [10.11.248.99:5000/cb-kubecd/pipeline-golang-sample]
e0b38dafa75e: Preparing
e0b38dafa75e: Pushed
0.0.1: digest: sha256:a5b5d7294c4d349fc487bf7fa644bd0dc29f9b2e8753f4bfc6f2a6e44ee12bca size: 528
Build complete in 1.648939029s
Starting test...
Test complete in 4.851Âµs
changeme -> 10.11.248.99:5000/cb-kubecd/pipeline-golang-sample:0.0.1
[Pipeline] sh
+ cat VERSION
+ jx step post build --image 10.11.248.99:5000/cb-kubecd/pipeline-golang-sample:0.0.1
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/cb-kubecd/pipeline-golang-sample/charts/pipeline-golang-sample
[Pipeline] {
[Pipeline] sh
+ cat ../../VERSION
+ jx step changelog --version v0.0.1
Using batch mode as inside a pipeline
Generating change log from git ref c8cebec293695bddd3d46cb57208bb3e3ad428ce => 4c2df314ecc035b846c1a7eb0895bf4b697e43a0
Failed to enrich commits with issues: User.jenkins.io "" is invalid: metadata.name: Required value: name or generateName is required
Failed to enrich commits with issues: User.jenkins.io "" is invalid: metadata.name: Required value: name or generateName is required
Finding issues in commit messages using git format
No release found for cb-kubecd/pipeline-golang-sample and tag v0.0.1 so creating a new release
Updated the release information at https://github.com/cb-kubecd/pipeline-golang-sample/releases/tag/v0.0.1
generated: /home/jenkins/go/src/github.com/cb-kubecd/pipeline-golang-sample/charts/pipeline-golang-sample/templates/release.yaml
Created Release pipeline-golang-sample-0-0-1 resource in namespace jx
Updating PipelineActivity cb-kubecd-pipeline-golang-sample-master-1 with version 0.0.1
Updated PipelineActivities cb-kubecd-pipeline-golang-sample-master-1 with release notes URL: https://github.com/cb-kubecd/pipeline-golang-sample/releases/tag/v0.0.1
[Pipeline] sh
+ jx step helm release
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Uploading chart file pipeline-golang-sample-0.0.1.tgz to http://jenkins-x-chartmuseum:8080/api/charts
Received 201 response: {"saved":true}
[Pipeline] sh
+ cat ../../VERSION
+ jx promote -b --all-auto --timeout 1h --version 0.0.1
prow based install so skip waiting for the merge of Pull Requests to go green as currently there is an issue with gettingstatuses from the PR, see https://github.com/jenkins-x/jx/issues/2410
Promoting app pipeline-golang-sample version 0.0.1 to namespace jx-staging
Created Pull Request: https://github.com/cb-kubecd/environment-jrawlings-dev8-staging/pull/1

Failed to query the Pull Request last commit status for https://github.com/cb-kubecd/environment-jrawlings-dev8-staging/pull/1 ref be445e3fbfbac978dbad3475525f0f3f24112ea5 Could not find a status for repository cb-kubecd/environment-jrawlings-dev8-staging with ref be445e3fbfbac978dbad3475525f0f3f24112ea5
Pull Request https://github.com/cb-kubecd/environment-jrawlings-dev8-staging/pull/1 is merged at sha 96ec1ecd84ca2e4e0983d8fc30ec9c0b109da93b
Pull Request merged but we are not waiting for the update pipeline to complete!
Could not find the service URL in namespace jx-staging for names pipeline-golang-sample, jx-pipeline-golang-sample, jx-staging-pipeline-golang-sample
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
